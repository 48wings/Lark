{
    "version": "0.5.0",
    "modules": [
        {
            "name": "lark",
            "description": "Lark Framework Core",
            "files": [
                {  "path" : "Defines.ts", "debug":true },
                "lark/display/Bitmap.ts",
                "lark/display/BitmapData.ts",
                "lark/display/BlendMode.ts",
                "lark/display/DisplayObject.ts",
                "lark/display/DisplayObjectContainer.ts",
                "lark/display/Graphics.ts",
                "lark/display/GraphicsGradient.ts",
                "lark/display/GraphicsPattern.ts",
                "lark/display/Shape.ts",
                "lark/display/Sprite.ts",
                "lark/display/Stage.ts",
                "lark/events/Event.ts",
                "lark/events/EventEmitter.ts",
                "lark/events/EventPhase.ts",
                "lark/events/IEventEmitter.ts",
                "lark/events/ProgressEvent.ts",
                "lark/events/TimerEvent.ts",
                "lark/events/TouchEvent.ts",
                "lark/geom/Matrix.ts",
                "lark/geom/Point.ts",
                "lark/geom/Rectangle.ts",
                "lark/i18n/en_US.ts",
                "lark/i18n/zh_CN.ts",
                "lark/net/HttpMethod.ts",
                "lark/net/HttpRequest.ts",
                "lark/net/HttpResponseType.ts",
                "lark/net/ImageLoader.ts",
                "lark/player/DirtyRegion.ts",
                "lark/player/DisplayList.ts",
                "lark/player/DisplayObjectFlags.ts",
                "lark/player/IScreenAdapter.ts",
                "lark/player/Player.ts",
                "lark/player/Region.ts",
                "lark/player/Renderable.ts",
                "lark/player/RenderContext.ts",
                "lark/player/ScaleMode.ts",
                "lark/player/ScreenAdapter.ts",
                "lark/player/Surface.ts",
                "lark/player/SurfaceFactory.ts",
                "lark/player/TextAdapter.ts",
                "lark/player/Ticker.ts",
                "lark/player/TouchHandler.ts",
                "lark/system/Capabilities.ts",
                "lark/system/Console.ts",
                "lark/text/HorizontalAlign.ts",
                "lark/text/TextField.ts",
                "lark/text/TextInput.ts",
                "lark/text/TextInputEvent.ts",
                "lark/text/TextMeasurer.ts",
                "lark/text/VerticalAlign.ts",
                "lark/Types.ts",
                "lark/utils/getDefinitionByName.ts",
                "lark/utils/getTimer.ts",
                "lark/utils/is.ts",
                "lark/utils/LarkObject.ts",
                "lark/utils/NONE.ts",
                "lark/utils/registerClass.ts",
                "lark/utils/Timer.ts",
                "lark/utils/tr.ts",
                { "path":"lark/web/CanvasFactory.ts", "platform":"html5" },
                { "path":"lark/web/LarkWeb.ts","platform":"html5"  },
                { "path":"lark/web/WebBitmapData.ts","platform":"html5"  },
                { "path":"lark/web/WebCapability.ts","platform":"html5"  },
                { "path":"lark/web/WebHttpRequest.ts","platform":"html5"  },
                { "path":"lark/web/WebImageLoader.ts","platform":"html5"  },
                { "path":"lark/web/WebScreen.ts","platform":"html5"  },
                { "path":"lark/web/WebTextAdapter.ts","platform":"html5"  },
                { "path":"lark/web/WebTouchHandler.ts","platform":"html5"  }
            ],
            "root":"src/",
            "dependencies": []
        }
    ],
    "platforms":[
        {
            "name":"any",
            "declaration":true,
            "hidden":true
        },
        {
            "name":"html5",
            "description":"Html5"
        }
    ],
    "templates":[
        {
            "name":"Empty",
            "description":"空项目"
        },
        {
            "name":"Demo",
            "description":"示例项目"
        }
    ],
    "scaleModes":[
        {
            "name":"noScale",
            "description":"不缩放应用程序内容。即使在更改播放器视口大小时，它仍然保持不变。如果播放器视口比内容小，则可能进行一些裁切。在此模式下，舞台尺寸（Stage.stageWidth,Stage.stageHeight）始终跟播放器视口大小保持一致。"
        },
        {
            "name":"showAll",
            "description":"保持原始宽高比缩放应用程序内容，缩放后应用程序内容的较宽方向填满播放器视口，另一个方向的两侧可能会不够宽而留有黑边。在此模式下，舞台尺寸(Stage.stageWidth,Stage.stageHeight)始终等于初始化时外部传入的应用程序内容尺寸。"
        },
        {
            "name":"noBorder",
            "description":"保持原始宽高比缩放应用程序内容，缩放后应用程序内容的较窄方向填满播放器视口，另一个方向的两侧可能会超出播放器视口而被裁切。在此模式下，舞台尺寸(Stage.stageWidth,Stage.stageHeight)始终等于初始化时外部传入的应用程序内容尺寸。"
        },
        {
            "name":"exactFit",
            "description":"不保持原始宽高比缩放应用程序内容，缩放后应用程序内容正好填满播放器视口。在此模式下，舞台尺寸(Stage.stageWidth,Stage.stageHeight)始终等于初始化时外部传入的应用程序内容尺寸。"
        },
        {
            "name":"fixedWidth",
            "description":"保持原始宽高比缩放应用程序内容，缩放后应用程序内容在水平和垂直方向都填满播放器视口，但只保持应用程序内容的原始宽度不变，高度可能会改变。在此模式下，舞台宽度(Stage.stageWidth)始终等于初始化时外部传入的应用程序内容宽度。舞台高度(Stage.stageHeight)由当前的缩放比例与播放器视口高度决定。"
        },
        {
            "name":"fixedHeight",
            "description":"保持原始宽高比缩放应用程序内容，缩放后应用程序内容在水平和垂直方向都填满播放器视口，但只保持应用程序内容的原始高度不变，宽度可能会改变。在此模式下，舞台高度(Stage.stageHeight)始终等于初始化时外部传入的应用程序内容高度。舞台宽度(Stage.stageWidth)由当前的缩放比例与播放器视口宽度决定。"
        }
    ]
}